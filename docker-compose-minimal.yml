version: "3.6"

volumes:
  metadata-db-data:
  search-service-data:
  broker-service-data:
  authentication-service-data:

networks:
  public:
    name: public
    driver: bridge
    ipam:
      config:
        - subnet: 172.29.0.0/16
  userdb:
    name: userdb
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
  core:
    name: core
    driver: bridge
    ipam:
      config:
        - subnet: 172.27.0.0/16

services:
  dbrepo-database-service:
    restart: "no"
    container_name: dbrepo-database-service
    hostname: database-service
    image: dbrepo/database-service:1.2
    networks:
      userdb:
      core:
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      dbrepo-container-service:
        condition: service_healthy
      dbrepo-broker-service:
        condition: service_started
      dbrepo-authentication-service:
        condition: service_healthy
    logging:
      driver: json-file

  dbrepo-container-service:
    restart: "no"
    container_name: dbrepo-container-service
    hostname: container-service
    image: dbrepo/container-service:1.2
    networks:
      core:
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      dbrepo-authentication-service:
        condition: service_healthy
    logging:
      driver: json-file

  dbrepo-authentication-service:
    restart: "no"
    container_name: dbrepo-authentication-service
    hostname: authentication-service
    image: dbrepo/authentication-service:1.2
    networks:
      core:
    ports:
      - "8443:8443"
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - authentication-service-data:/opt/keycloak/data/
    logging:
      driver: json-file

  dbrepo-query-service:
    restart: "no"
    container_name: dbrepo-query-service
    hostname: query-service
    image: dbrepo/query-service:1.2
    networks:
      core:
      userdb:
    env_file:
      - .env
    volumes:
      - ${SHARED_FILESYSTEM}:/tmp
    depends_on:
      dbrepo-broker-service:
        condition: service_healthy
      dbrepo-table-service:
        condition: service_healthy
      dbrepo-authentication-service:
        condition: service_healthy
    logging:
      driver: json-file

  dbrepo-table-service:
    restart: on-failure
    container_name: dbrepo-table-service
    hostname: table-service
    image: dbrepo/table-service:1.2
    networks:
      core:
      userdb:
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${SHARED_FILESYSTEM}:/tmp
    depends_on:
      dbrepo-authentication-service:
        condition: service_healthy
      dbrepo-broker-service:
        condition: service_healthy
    logging:
      driver: json-file

  dbrepo-identifier-service:
    restart: "no"
    container_name: dbrepo-identifier-service
    hostname: identifier-service
    image: dbrepo/identifier-service:1.2
    networks:
      core:
    env_file:
      - .env
    depends_on:
      dbrepo-query-service:
        condition: service_healthy
      dbrepo-authentication-service:
        condition: service_healthy
    volumes:
      - ${SHARED_FILESYSTEM}:/tmp
    logging:
      driver: json-file

  dbrepo-user-service:
    restart: "no"
    container_name: dbrepo-user-service
    hostname: user-service
    image: dbrepo/user-service:1.2
    networks:
      core:
    ports:
      - "9098:9098"
    env_file:
      - .env
    depends_on:
      dbrepo-authentication-service:
        condition: service_healthy
    logging:
      driver: json-file

  dbrepo-broker-service:
    restart: "no"
    container_name: dbrepo-broker-service
    hostname: broker-service
    image: dbrepo/broker-service:1.2
    networks:
      core:
    ports:
      - "5672:5672"
    env_file:
      - .env
    depends_on:
      dbrepo-authentication-service:
        condition: service_healthy
    volumes:
      - broker-service-data:/var/lib/rabbitmq/
    logging:
      driver: json-file

  dbrepo-gateway-service:
    restart: "no"
    container_name: dbrepo-gateway-service
    hostname: gateway-service
    image: nginx:alpine
    networks:
      core:
      public:
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dbrepo.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      dbrepo-authentication-service:
        condition: service_healthy
      dbrepo-broker-service:
        condition: service_healthy
      dbrepo-container-service:
        condition: service_healthy
      dbrepo-database-service:
        condition: service_healthy
      dbrepo-identifier-service:
        condition: service_healthy
      dbrepo-query-service:
        condition: service_healthy
      dbrepo-table-service:
        condition: service_healthy
      dbrepo-user-service:
        condition: service_healthy
    logging:
      driver: json-file
